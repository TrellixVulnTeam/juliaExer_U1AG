using Distributions
using Plots
using QuadGK

Œ£‚ÇÅ‚ÇÅ, Œ£‚ÇÅ‚ÇÇ, Œ£‚ÇÅ‚ÇÉ = 1.0, 0.5, 0.1
Œ£‚ÇÇ‚ÇÅ, Œ£‚ÇÇ‚ÇÇ, Œ£‚ÇÇ‚ÇÉ = 0.5, 2.0, 0.2
Œ£‚ÇÉ‚ÇÅ, Œ£‚ÇÉ‚ÇÇ, Œ£‚ÇÉ‚ÇÉ = 0.1, 0.2, 0.5
Œº‚ÇÅ=0
Œº‚ÇÇ=-1.0
Œº‚ÇÉ=2.0

Œº = [
    Œº‚ÇÅ
    Œº‚ÇÇ
    Œº‚ÇÉ
]

Œ£ = [
    Œ£‚ÇÅ‚ÇÅ Œ£‚ÇÅ‚ÇÇ Œ£‚ÇÅ‚ÇÉ
    Œ£‚ÇÇ‚ÇÅ Œ£‚ÇÇ‚ÇÇ Œ£‚ÇÇ‚ÇÉ
    Œ£‚ÇÉ‚ÇÅ Œ£‚ÇÉ‚ÇÇ Œ£‚ÇÉ‚ÇÉ
]


Œº_marginal = [
    Œº‚ÇÅ
    Œº‚ÇÇ
]

Œ£_marginal = [
    Œ£‚ÇÅ‚ÇÅ Œ£‚ÇÅ‚ÇÇ
    Œ£‚ÇÇ‚ÇÅ Œ£‚ÇÇ‚ÇÇ
]


d = MvNormal(Œº, Œ£)
data = rand(d,250)

"""
p(x,y) = \\int p(x,y,z) dz
"""
function marginal(d, x, y)
    integral, err = quadgk(
        z->pdf(d,[x,y,z]),
        Œº[2] - maximum(abs.(Œ£)),
        Œº[2] + maximum(abs.(Œ£)),
        rtol = 1e-8,
    )
    return integral
end

marginal(y,z)=marginal(d,y,z)
contour(collect(-5:0.1:5), collect(-5:0.1:5), marginal)
scatter!(data[1,:], data[2,:], label="numeric")

# the pdf function p(x,y) should be ùí©(Œº_marginal, Œ£_marginal).
d = MvNormal(Œº_marginal, Œ£_marginal)
data = rand(d,250)
scatter!(data[1,:],data[2,:],label="theoretial")
